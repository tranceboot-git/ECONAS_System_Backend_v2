# =============================================================================
# ECS Fargate サイドカー構成用 Fluent Bit 設定テンプレート（修正版）
# デバッグ機能を有効化してログルーティング問題を解決
# =============================================================================

[SERVICE]
    Flush               5
    Grace               30
    Log_Level           ${FLUENT_BIT_LOG_LEVEL}
    Parsers_File        /fluent-bit/parsers/parsers.conf
    Parsers_File        /fluent-bit/etc/custom_parsers.conf
    HTTP_Server         On
    HTTP_Listen         0.0.0.0
    HTTP_Port           2020
    Health_Check        On

# =============================================================================
# INPUT: ECS FireLens経由のコンテナログ
# FireLensのデフォルトタグ形式: <container_name>-firelens-<task_id>
# =============================================================================

# すべてのFireLensログを受信
[INPUT]
    Name                forward
    Listen              0.0.0.0
    Port                24224
    Tag                 container.*

# =============================================================================
# FILTER: コンテナ識別とメタデータ追加
# =============================================================================

# ECSメタデータを追加
[FILTER]
    Name                record_modifier
    Match               *-firelens-*
    Record              source stdout
    Record              log_driver awsfirelens
    Record              ecs_cluster ${ECS_CLUSTER_NAME}
    Record              ecs_service ${ECS_SERVICE_NAME}

# init-containerのログを識別（複数パターンに対応）
[FILTER]
    Name                record_modifier
    Match_Regex         (init-container|init_container).*
    Record              container_name init-container
    Record              container_type init
    Record              log_stream_name init-container
    Record              container_essential false

# app-containerのログを識別（複数パターンに対応）
[FILTER]
    Name                record_modifier
    Match_Regex         (app-container|app_container).*
    Record              container_name app-container
    Record              container_type app
    Record              log_stream_name app-container
    Record              container_essential true

# log-routerのログ（fluent-bit自体のログ）
[FILTER]
    Name                record_modifier
    Match_Regex         (log-router|log_router).*
    Record              container_name log-router
    Record              container_type log-router
    Record              log_stream_name log-router
    Record              container_essential true

# その他のFireLensログ（フォールバック）
[FILTER]
    Name                record_modifier
    Match               *-firelens-*
    Record              container_type unknown
    Record              log_stream_name container-stdout

# =============================================================================
# FILTER: ログレベル判定とタグ付け
# =============================================================================

# エラーログの識別（init-container）
[FILTER]
    Name                rewrite_tag
    Match_Regex         (init-container|init_container).*
    Rule                $log (?i)(error|fail|exception|fatal|panic|abort|stderr) init-container-error false

# エラーログの識別（app-container）
[FILTER]
    Name                rewrite_tag
    Match_Regex         (app-container|app_container).*
    Rule                $log (?i)(error|fail|exception|fatal|panic|abort|production\.error|stderr) app-container-error false

# 警告ログの識別
[FILTER]
    Name                rewrite_tag
    Match               *-firelens-*
    Rule                $log (?i)(warn|warning|notice) container-warning false

# =============================================================================
# FILTER: 非権限ユーザー対応（UID 1000:1000）
# =============================================================================

# 非権限ユーザーで実行されるコンテナのメタデータを追加
[FILTER]
    Name                record_modifier
    Match               *-firelens-*
    Record              container_user 1000:1000
    Record              execution_mode non-privileged
    Record              fargate_platform_version LATEST

# =============================================================================
# FILTER: ログフォーマット調整
# =============================================================================

# JSONログの場合はパース
[FILTER]
    Name                parser
    Match               *-firelens-*
    Key_Name            log
    Parser              json
    Reserve_Data        On
    Preserve_Key        On

# =============================================================================
# OUTPUT: デバッグ用（問題解決のため一時的に有効化）
# =============================================================================

# デバッグ用標準出力（すべてのログを確認）
[OUTPUT]
    Name                stdout
    Match               *
    Format              json_lines

# =============================================================================
# OUTPUT: CloudWatch Logs - コンテナ別出力
# =============================================================================

# init-containerの標準出力（複数パターンに対応）
[OUTPUT]
    Name                cloudwatch_logs
    Match_Regex         (init-container|init_container).*
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     init-container/stdout
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# init-containerのエラーログ
[OUTPUT]
    Name                cloudwatch_logs
    Match               init-container-error
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     init-container/error
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# app-containerの標準出力（複数パターンに対応）
[OUTPUT]
    Name                cloudwatch_logs
    Match_Regex         (app-container|app_container).*
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     app-container/stdout
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# app-containerのエラーログ
[OUTPUT]
    Name                cloudwatch_logs
    Match               app-container-error
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     app-container/error
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# log-routerのログ（複数パターンに対応）
[OUTPUT]
    Name                cloudwatch_logs
    Match_Regex         (log-router|log_router).*
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     log-router/stdout
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# 警告ログ
[OUTPUT]
    Name                cloudwatch_logs
    Match               container-warning
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     container/warning
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# その他のコンテナログ（フォールバック - より広いパターン）
[OUTPUT]
    Name                cloudwatch_logs
    Match               *
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     container/fallback
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# =============================================================================
# OUTPUT: 統合ログストリーム（全コンテナ）
# =============================================================================

# 全コンテナのログを統合したストリーム
[OUTPUT]
    Name                cloudwatch_logs
    Match               *
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     all-containers/stdout
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# =============================================================================
# 追加のファイルベースログ監視（必要に応じて）
# =============================================================================

#
# EFS上のアプリケーションログファイル監視
#

# アプリケーションのログファイル
[INPUT]
    Name                tail
    Path                ${EFS_APPLICATION_MOUNT_PATH}/logs/app/*.log
    Tag                 app_file_log
    Parser              json
    Path_Key            log_file
    Refresh_Interval    5
    Mem_Buf_Limit       50MB
    Buffer_Max_Size     1MB
    Skip_Long_Lines     On

# Laravelのアプリケーションのジョブログファイル
[INPUT]
    Name                tail
    Path                ${EFS_APPLICATION_MOUNT_PATH}/logs/supervisor/laravel*.log
    Tag                 app_supervisor_laravel_job_log
    Parser              json
    Path_Key            log_file
    Refresh_Interval    5
    Mem_Buf_Limit       50MB
    Buffer_Max_Size     1MB
    Skip_Long_Lines     On

# Supervisorのログファイル
[INPUT]
    Name                tail
    Path                ${EFS_APPLICATION_MOUNT_PATH}/logs/supervisor/supervisord*.log
    Tag                 app_supervisor_log
    Parser              supervisord_detailed
    Path_Key            log_file
    Refresh_Interval    5
    Mem_Buf_Limit       50MB
    Buffer_Max_Size     1MB
    Skip_Long_Lines     On

# Apacheのアクセスログファイル
[INPUT]
    Name                tail
    Path                ${EFS_APPLICATION_MOUNT_PATH}/logs/httpd/access_log
    Tag                 app_httpd_access
    Parser              httpd_access
    Path_Key            log_file
    Refresh_Interval    5
    Mem_Buf_Limit       50MB
    Buffer_Max_Size     1MB
    Skip_Long_Lines     On

# Apacheのエラーログファイル
[INPUT]
    Name                tail
    Path                ${EFS_APPLICATION_MOUNT_PATH}/logs/httpd/error_log
    Tag                 app_httpd_error
    Parser              apache_error
    Path_Key            log_file
    Refresh_Interval    5
    Mem_Buf_Limit       50MB
    Buffer_Max_Size     1MB
    Skip_Long_Lines     On

#
# ログファイルをCloudWatchに出力
#

# アプリケーションのログファイルをCloudWatchに出力
[OUTPUT]
    Name                cloudwatch_logs
    Match               app_file_log
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     app-container/app-logs
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines 

# LaravelのアプリケーションのジョブログファイルをCloudWatchに出力
[OUTPUT]
    Name                cloudwatch_logs
    Match               app_supervisor_laravel_job_log
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     app-container/laravel-job-logs
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# SupervisorのログファイルをCloudWatchに出力
[OUTPUT]
    Name                cloudwatch_logs
    Match               app_supervisor_log
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     app-container/supervisor-logs
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# ApacheのアクセスログファイルをCloudWatchに出力
[OUTPUT]
    Name                cloudwatch_logs
    Match               app_httpd_access
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     app-container/httpd-access
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines

# ApacheのエラーログファイルをCloudWatchに出力
[OUTPUT]
    Name                cloudwatch_logs
    Match               app_httpd_error
    region              ${REGION}
    log_group_name      ${CLOUDWATCH_LOG_GROUP_ID}
    log_stream_name     app-container/httpd-error
    auto_create_group   true
    log_retention_days  7
    log_format          json_lines
